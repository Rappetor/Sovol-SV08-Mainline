[mcu pico]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6635C08CB096C2C-if00
restart_method: command

[temperature_sensor chamber]
sensor_type: BME280
min_temp: 0
max_temp: 65
i2c_address: 119
#   Default is 118 (0x76). The BMP180, #BMP388 and some BME280 sensors
#   have an address of 119 (0x77).
i2c_mcu: pico
#   The name of the micro-controller that the chip is connected to.
#   The default is "mcu".
i2c_bus: i2c0a
#   If the micro-controller supports multiple I2C busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#i2c_software_scl_pin:
#i2c_software_sda_pin:
#   Specify these parameters to use micro-controller software based
#   I2C "bit-banging" support. The two parameters should the two pins
#   on the micro-controller to use for the scl and sda wires. The
#   default is to use hardware based I2C support as specified by the
#   i2c_bus parameter.
#i2c_speed:
#   The I2C speed (in Hz) to use when communicating with the device.
#   The Klipper implementation on most micro-controllers is hard-coded
#   to 100000 and changing this value has no effect. The default is
#   100000. Linux, RP2040 and ATmega support 400000.
gcode_id:

[gcode_macro _QUERY_BME280]
gcode:
    {% set sensor = printer["bme280 chamber"] %}
    {action_respond_info(
        "Temperature: %.2f C\n"
        "Pressure: %.2f hPa\n"
        "Humidity: %.2f%%" % (
            sensor.temperature,
            sensor.pressure,
            sensor.humidity))}
